webpackJsonp([4],{Rlx7:function(t,e,a){var s=a("rcIA");"string"==typeof s&&(s=[[t.i,s,""]]),s.locals&&(t.exports=s.locals);a("rjj0")("6736c5d5",s,!0)},bMNp:function(t,e,a){"use strict";var s=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("v-layout",{attrs:{column:"","justify-center":"","align-center":""}},[a("v-flex",{attrs:{xs12:"",sm10:"",md8:""}},[a("v-card",[a("v-card-title",{staticClass:"headline"},[t._v("The Key/Value Backend")]),a("v-card-text",[a("p",[t._v("In order to generate certificates we first need to create a mount with type pki. This can be done\n            by issuing "),a("code",{staticClass:"elevation-3"},[t._v("vault mount pki")]),t._v(". The default path for this mount is "),a("code",{staticClass:"elevation-3"},[t._v("pki/")]),t._v(".\n            To mount the pki backend at a different path you can add "),a("code",{staticClass:"elevation-3"},[t._v("-path [path]")]),t._v(". For this tutorial we\n            assume the path has been set to "),a("code",{staticClass:"elevation-3"},[t._v("vaultcerts")]),t._v(". Once we have a pki mount we should set the \n            "),a("code",{staticClass:"elevation-3"},[t._v("max-lease-ttl")]),t._v(" to be much higher than the default which is 30 days. While we may not be intending\n            to issue any certificates that last longer than 30 days we probably want our root ca to last much longer as an expired root \n            ca would automatically invalidate all the certificates it had generated. "),a("code",{staticClass:"elevation-3"},[t._v("vault mount-tune -max-lease-ttl=87600h vaultcerts")]),t._v("\n            will set the max ttl to be 10 years. Now we can generate a root ca certificate by issuing\n            "),a("code",{staticClass:"elevation-3"},[t._v("vault write vaultcerts/root/generate/internal common_name=vault_ca ttl=87600h")]),t._v(". We should make a note of the \n            certificate returned. As this will need to be added to the trusted ca list later. We should also set some configuration values for this\n            root ca namely the urls where clients can find the root ca and the crl. This can be done by writing to the \n            "),a("code",{staticClass:"elevation-3"},[t._v("vaultcerts/config/urls")]),t._v(" path.\n          ")])])],1),a("ul",{staticClass:"vagrantterm"},[a("li",{staticClass:"command"},[t._v("vault mount -path=vaultcerts pki")]),a("li",{staticClass:"response"},[t._v("Successfully mounted 'pki' at 'vaultcerts'!")]),a("li",{staticClass:"command"},[t._v("vault mount-tune -max-lease-ttl=87600h vaultcerts")]),a("li",{staticClass:"response"},[t._v("Successfully tuned mount 'vaultcerts'!")]),a("li",{staticClass:"command"},[t._v("vault write -field=certificate vaultcerts/root/generate/internal common_name=vault_ca ttl=87600h > rootca.crt")]),a("li",{staticClass:"command"},[t._v('vault write vaultcerts/config/urls issuing_certificates="https://127.0.0.1:8200/v1/vaultcerts/ca" crl_distribution_points="https://127.0.0.1:8200/v1/vaultcerts/crl"')])]),a("v-card",[a("v-card-text",[a("p",[t._v("Now that we have a root ca we should add this to our systems trust store to make sure any of the certificates\n          generated from this mount are trusted. The procedure for doing this changes from distro to distro. We will only be\n          showing the process for CentOS 7.4 as this the distro used on the VM for this tutorial.\n          ")])])],1),a("ul",{staticClass:"vagrantterm"},[a("li",{staticClass:"command"},[t._v("sudo cp rootca.crt /etc/pki/ca-trust/source/anchors/")]),a("li",{staticClass:"command"},[t._v("sudo update-ca-trust")])]),a("v-card",[a("v-card-actions",[a("v-btn",{attrs:{color:"error",flat:"",nuxt:"",to:{name:"audit-syslog"}}},[t._v("Audit Backends")]),a("v-spacer"),a("v-btn",{attrs:{color:"primary",flat:"",nuxt:"",to:{name:"secrets-consul"}}},[t._v("Next")])],1)],1)],1)],1)},o=[],n={render:s,staticRenderFns:o};e.a=n},"ig0/":function(t,e){},pomG:function(t,e,a){"use strict";function s(t){a("Rlx7")}Object.defineProperty(e,"__esModule",{value:!0});var o=a("ig0/"),n=a.n(o),i=a("bMNp"),c=a("VU/8"),r=s,l=c(n.a,i.a,!1,r,"data-v-464581d9",null);e.default=l.exports},rcIA:function(t,e,a){e=t.exports=a("FZ+f")(!1),e.push([t.i,"p[data-v-464581d9]{text-align:justify}code[data-v-464581d9]{text-align:left;white-space:pre;overflow-x:scroll}",""])}});
//# sourceMappingURL=kv.16b3509a2259111d9f50.js.map